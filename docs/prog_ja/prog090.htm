<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【90】コードを見る人のためにテストを書く - プログラマが知るべき 97 のこと</title>
  <meta property="og:title" content="【90】コードを見る人のためにテストを書く | プログラマが知るべき 97 のこと">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/prog97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/prog_ja/prog090.htm">
  <meta property="og:site_name" content="プログラマが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <script type="text/javascript" src="../js/darkmode.js"></script>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e90">【90】コードを見る人のためにテストを書く<span id="color-scheme"></span></h1>
<div class="author">
ジェラルド・メサローシュ（Gerard Meszaros）
</div>
<p>　読者の中に「製品版コード一つ一つについて、必ず自動化テストを書くようにしている」という人はどのくらいいますか？　もしそうしているのなら、素晴らしいことだと思います。「テストは、いつもコードを書き始める前に書くようにしている」という人がいれば、さらに素晴らしいです。どちらも、ソフトウェアエンジニアリングの最先端のプラクティスをいち早く取り入れている、と言えるでしょう。ただ、テストを書くのはいいとして、そのテストは果たして「良いテスト」と言えるでしょうか。良いテストが書けているかを、どうやって見極めればいいのでしょうか。そのために「自分は誰のためにテストを書いているのか」と自らに問うてみるのは 1 つの方法でしょう。もしその答えが「自分のため。バグ修正の労力を少しでも減らすため」あるいは「コンパイラのため。コンパイル作業を円滑に進めるため」だったとしたら、良いテストが書けている可能性は低いと言えるでしょう。では一体誰のためにテストを書けばいいというのでしょうか。それは、「<strong>コードを見る人のため</strong>」です。</p>
<p>　良いテストはドキュメントのようなはたらきをします。テスト対象となるコードについて知るのに役立つのです。「このコードはどう動くのか」を教えてくれるのが良いテストです。良いテストの条件を簡単にまとめると次のようになるでしょう。</p>
<ul>
<li>コンテキスト、出発点、満たすべき事前条件がわかる。</li>
<li>ソフトウェアがどのように起動されるかがわかる。</li>
<li>期待される結果と、確認すべき事後条件がわかる。</li>
</ul>
<p>　以上の 3 つは利用シナリオごとに少しずつ違ってきますが、それが逐一わかるのが良いテストでしょう。コードについて知りたいと思った人がテストを見た時、上の 3 つの点についてわかればいいわけです。それによって、ソフトウェアの動きを変化させるために何を変えればいいかもわかるでしょう。テストを見ることで、上の 3 つの間の因果関係も明確にわかるのが望ましいと言えます。</p>
<p>　テストに関しては、何を見せるかだけでなく、「何を見せないか」も重要になります。たとえば、テストのコードが多すぎれば、読む人は些細なことにばかり囚われて肝心なことが理解できなくなる恐れがあります。できる限り、メソッドコールなどの重要な部分以外は、隠しておくようにするといいでしょう。その意味で「メソッドの抽出」リファクタリングは非常に有効といえます。テストには、その利用シナリオについて説明するような意味のある名前をつけるようにすべきです。その名前を見れば、テストの読み手は、リバースエンジニアリングをしなくても、シナリオがどういうものであるかわかります。テストメソッドだけでなく、テストクラスやクラスメソッドにも、少なくとも出発点がわかるような、あるいはソフトウェアの起動のされ方がわかるような名前をつけます。こうしておけば、メソッド名をざっと見ていくだけで、だいたいのテストカバレッジがわかります。名前が長すぎて読みづらいという問題が起きないようであれば、テストメソッド名は「そのメソッドに期待される実行結果」も同時にわかるようにしておくといいでしょう。</p>
<p>　テストのテストをするのも良いことです。製品版コード（ただし本物ではなくコピー。テストが終わったら破棄する）にあえてエラーを混入させ、期待どおりにそのエラーが検知されるかを確認するのです。単にエラーの発生が報告されるだけでなく、どういうエラーが起きていてどう対処すればいいかがわかる報告になっていることも確認しましょう。テストが、コードを理解する上で本当に役立つものになっているかも確認しておくべきでしょう。それを確認するには、コードについてよく知らない人にテストを読んでもらうしかありません。読んでもらった上で何がわかったかを話してもらうのです。その時に話されることをじっくりと聞くことが大事です。よく話を聞いて、もし何か「これはよくわかっていないな」と感じたことがあったとすれば、それはおそらく、その人に知性が欠けているせいではありません。テストが十分にわかりやすいものになっていないということです（その後、役割を交代し、テストを読んでくれた人の書いたテストをこちらが読んでみても面白いでしょう）。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>

<div>
    <a class="sns-button" href="https://twitter.com/share?url=https://yoshi389111.github.io/kinokobooks/prog_ja/prog090.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/twitter.svg"></a>
    <a class="sns-button" href="https://www.facebook.com/share.php?u=https://yoshi389111.github.io/kinokobooks/prog_ja/prog090.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/facebook.svg"></a>
    <a class="sns-button" href="https://b.hatena.ne.jp/add?mode=confirm&url=https://yoshi389111.github.io/kinokobooks/prog_ja/prog090.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/hatebu.svg"></a>
    <a class="sns-button" href="https://getpocket.com/edit?url=https://yoshi389111.github.io/kinokobooks/prog_ja/prog090.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/pocket.svg"></a>
</div>

<nav>
<ul class="nav-links">
<li class="prev-article"><a href="prog089.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="prog091.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
